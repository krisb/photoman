#!/usr/bin/env node

var _ = require('lodash');
var Chalk = require('chalk');
var Rc = require('rc');

var Photoman = require('../lib');
var Tasks = require('../lib/tasks');

var options = {};
Rc('photoman', options);

var opt = function(key, alias, defaultValue) {
  options[key] = options[key] || options[alias] || defaultValue;
  delete options[alias];
};

var conv = function(key, f) {
  options[key] = _.map(options[key], f);
};

var invoke = function () {
  var usage = function() {
    console.log('  tools for managing photos');
    console.log();
    console.log(Chalk.bold('  Usage: photoman <options> <commands>'));
    console.log();
    console.log(Chalk.bold.blue('  Options:'));
    console.log('    -h, --help                  output usage information');
    console.log('    -v, --verbose               verbose output');
    console.log('    -x, --trace                 trace output');
    console.log('    -m, --manifest              manifest file to use');
    console.log();
    console.log(Chalk.bold.blue('  Commands:'));
    console.log('    init [dir]                  creates .photomanrc in supplied directory or user.home if not supplied');
    console.log('    list                        lists photo metadata. Uses the supplied manifest or scans.');
    console.log('    write                       scans the filesystem and writes a manifest');
    console.log('    organise                    origanise photos, moving them if appropriate. Uses the supplied manifest or scans.');
    console.log();
  };

  opt('trace', 'x', false);
  opt('verbose', 'v', false);
  opt('help', 'h', false);
  opt('manifest', 'm', false);
  opt('renameFileRegexs', undefined, ["^img_[0-9]{4}\\.jpe?g$"]);

  conv('renameFileRegexs', function(s) { return new RegExp(s, 'i'); });

  var args = options._; // left over arguments

  if (options.trace) {
    console.log(Chalk.bold('options:'), '\n', options, '\n');
  }

  if (options.help || args.length === 0) {
    usage();
    process.exit(0);
  }

  if (!Tasks[args[0]]) {
    console.log(Chalk.bold.red('Unknown task: ' + args[0]));
    usage();
    process.exit(1);
  }

  Photoman.execute(args, options);
};

invoke();
